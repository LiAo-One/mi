<template>
  <div class="app-container">
    <!--${tableName}数据-->
    <el-row :gutter= "20">
      <el-col :span="20" :xs="24">
        <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">
            #foreach($column in $!{columns})
              <el-form-item label="${column.columnComment}" prop="${column.javaField}">
                <el-input
                    v-model="queryParams.${column.javaField}"
                    placeholder="请输入${column.columnComment}"
                    clearable
                    size="small"
                    style="width: 240px"
                    @keyup.enter.native="handleQuery"
                />
              </el-form-item>
            #end
          <el-form-item>
            <el-button type="cyan" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
            <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
          </el-form-item>
        </el-form>

        <el-row :gutter="10" class="mb8">
          <el-col :span="1.5">
            <el-button
                type="primary"
                icon="el-icon-plus"
                size="mini"
                @click="handleAdd"
            >新增
            </el-button>
          </el-col>
          <el-col :span="1.5">
            <el-button
                type="success"
                icon="el-icon-edit"
                size="mini"
                :disabled="single"
                @click="handleUpdate"
            >修改
            </el-button>
          </el-col>
          <el-col :span="1.5">
            <el-button
                type="danger"
                icon="el-icon-delete"
                size="mini"
                :disabled="multiple"
                @click="handleDelete"
            >删除
            </el-button>
          </el-col>
          <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
        </el-row>

        <el-table v-loading="loading" :data="${finleName}List" @selection-change="handleSelectionChange">
          <el-table-column type="selection" width="50" align="center"/>

            #foreach($column in $!{columns})

              <el-table-column label="${column.columnComment}" align="center" prop="${column.javaField}"
                               :show-overflow-tooltip="true"/>
            #end

          <el-table-column
              label="操作"
              align="center"
              width="160"
              class-name="small-padding fixed-width"
          >
            <template slot-scope="scope">
              <el-button
                  size="mini"
                  type="text"
                  icon="el-icon-edit"
                  @click="handleUpdate(scope.row)"
              >修改
              </el-button>
              <!-- v-if="scope.row.userId !== 1"-->
              <el-button
                  size="mini"
                  type="text"
                  icon="el-icon-delete"
                  @click="handleDelete(scope.row)"
              >删除
              </el-button>
            </template>
          </el-table-column>
        </el-table>

        <pagination
            v-show="total>0"
            :total="total"
            :page.sync="queryParams.pageNum"
            :limit.sync="queryParams.pageSize"
            @pagination="getList"
        />
      </el-col>
    </el-row>

    <!-- 添加或修改参数配置对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="600px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
          #foreach($column in $!{columns})
            <el-col :span="12">
              <el-form-item label="${column.columnComment}" prop="${column.javaField}">
                <el-input v-model="form.${column.javaField}" placeholder="请输入${column.columnComment}"/>
              </el-form-item>
            </el-col>
          #end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>

  </div>
</template>

<script>
  import {
    list${className},
    get${className},
    update${className},
    add${className},
    delete${className}
  } from '@/api/view/${finleName}'

  import '@riophae/vue-treeselect/dist/vue-treeselect.css'

  export default {
    name: '${className}',
    data() {
      return {
        // 遮罩层
        loading: true,
        // 选中数组
        ids: [],
        // 非单个禁用
        single: true,
        // 非多个禁用
        multiple: true,
        // 显示搜索条件
        showSearch: true,
        // 总条数
        total: 0,
        // 用户表格数据
        ${finleName}List: null,
        // 弹出层标题
        title: '',
        // 是否显示弹出层
        open: false,
        // 表单参数
        form: {},
        // 查询参数
        queryParams: {
          pageNum: 1,
          pageSize: 10,
#foreach($column in $!{columns})
    ${column.javaField}: undefined,
#end
        },
        // 表单校验
        rules: {
            #foreach($column in $!{columns})
            ${column.javaField}: [
                {required: true, message: '${column.columnComment}不能为空', trigger: 'blur'}
            ],
            #end
        }
      }
    },
    created() {
      this.getList()
    },
    methods: {
      /** 查询用户列表 */
      getList() {
        this.loading = true
        list${className}(this.queryParams).then(response => {
              this.${finleName}List = response.data.records
              this.total = response.data.total
              this.loading = false
            }
        )
      },
      // 取消按钮
      cancel() {
        this.open = false
        this.reset()
      },
      // 表单重置
      reset() {
        this.form = {
        #foreach($column in $!{columns})
          ${column.javaField}: undefined,
        #end
        }
        this.resetForm('form')
      },
      /** 搜索按钮操作 */
      handleQuery() {
        this.queryParams.page = 1
        this.getList()
      },
      /** 重置按钮操作 */
      resetQuery() {
        this.resetForm('queryForm')
        this.handleQuery()
      },
      // 多选框选中数据
      handleSelectionChange(selection) {
        this.ids = selection.map(item => item.$!columns.get(0).javaField)
        this.single = selection.length !== 1
        this.multiple = !selection.length
      },
      /** 新增按钮操作 */
      handleAdd() {
        this.reset()
        this.open = true
        this.title = '添加用户'
      },
      /** 修改按钮操作 */
      handleUpdate(row) {
        this.reset()
        const updateId = row.$!columns.get(0).javaField || this.ids
        get${className}(updateId.toString()).then(response => {
          this.form = response.data
          this.open = true
          this.title = '修改用户'
        })
      },
      /** 提交按钮 */
      submitForm() {
        this.#[[$]]#refs["form"].validate(valid => {
          if(valid){
            if (this.form.$!columns.get(0).javaField !== undefined) {
              update${className}(this.form).then(response => {
                this.msgSuccess('修改成功')
                this.open = false
                this.getList()
              })
            } else {
              add${className}(this.form).then(response => {
                this.msgSuccess('新增成功')
                this.open = false
                this.getList()
                })
              }
            }
        })
      },
      /** 删除按钮操作 */
      handleDelete(row) {
        const deletedId = row.$!columns.get(0).javaField || this.ids
        this.$confirm('是否确认删除编号为"' + deletedId + '"的数据项?', '警告', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(function () {
          return delete${className}(deletedId.toString())
        }).then(() => {
          this.getList()
          this.msgSuccess('删除成功')
        })
      }
    }
  }
</script>

<style scoped>
  >>> .el-col-20 {
    width: 100%;
  }
</style>
